# Code generated by fin-protoc. DO NOT EDIT.
import unittest

from root_packet import *

class TestSubPacket(unittest.TestCase):
    def setUp(self):
        self.packet = SubPacket()

    def test_encode_decode(self):
        buf = ByteBuf()
        self.packet.encode(buf)
        decoded_packet = SubPacket()
        decoded_packet.decode(buf)
        self.assertEqual(decoded_packet, self.packet)



class TestEmptyPacket(unittest.TestCase):
    def setUp(self):
        self.packet = EmptyPacket()

    def test_encode_decode(self):
        buf = ByteBuf()
        self.packet.encode(buf)
        decoded_packet = EmptyPacket()
        decoded_packet.decode(buf)
        self.assertEqual(decoded_packet, self.packet)



class TestRootPacket(unittest.TestCase):
    def setUp(self):
        self.packet = RootPacket()

    def test_encode_decode(self):
        buf = ByteBuf()
        self.packet.encode(buf)
        decoded_packet = RootPacket()
        decoded_packet.decode(buf)
        self.assertEqual(decoded_packet, self.packet)



class TestBasicPacket(unittest.TestCase):
    def setUp(self):
        self.packet = BasicPacket()

    def test_encode_decode(self):
        buf = ByteBuf()
        self.packet.encode(buf)
        decoded_packet = BasicPacket()
        decoded_packet.decode(buf)
        self.assertEqual(decoded_packet, self.packet)



class TestStringPacket(unittest.TestCase):
    def setUp(self):
        self.packet = StringPacket()

    def test_encode_decode(self):
        buf = ByteBuf()
        self.packet.encode(buf)
        decoded_packet = StringPacket()
        decoded_packet.decode(buf)
        self.assertEqual(decoded_packet, self.packet)



class TestNestedPacket(unittest.TestCase):
    def setUp(self):
        self.packet = NestedPacket()

    def test_encode_decode(self):
        buf = ByteBuf()
        self.packet.encode(buf)
        decoded_packet = NestedPacket()
        decoded_packet.decode(buf)
        self.assertEqual(decoded_packet, self.packet)



if __name__ == '__main__':
    unittest.main()
